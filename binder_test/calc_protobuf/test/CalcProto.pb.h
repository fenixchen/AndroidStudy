// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test/CalcProto.proto

#ifndef PROTOBUF_INCLUDED_test_2fCalcProto_2eproto
#define PROTOBUF_INCLUDED_test_2fCalcProto_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_test_2fCalcProto_2eproto 

namespace protobuf_test_2fCalcProto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_test_2fCalcProto_2eproto
namespace test {
class CalcCommandProto;
class CalcCommandProtoDefaultTypeInternal;
extern CalcCommandProtoDefaultTypeInternal _CalcCommandProto_default_instance_;
class CalcResultProto;
class CalcResultProtoDefaultTypeInternal;
extern CalcResultProtoDefaultTypeInternal _CalcResultProto_default_instance_;
}  // namespace test
namespace google {
namespace protobuf {
template<> ::test::CalcCommandProto* Arena::CreateMaybeMessage<::test::CalcCommandProto>(Arena*);
template<> ::test::CalcResultProto* Arena::CreateMaybeMessage<::test::CalcResultProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace test {

enum CalcCommandProto_Type {
  CalcCommandProto_Type_ADD = 0,
  CalcCommandProto_Type_SUB = 1,
  CalcCommandProto_Type_MUL = 2,
  CalcCommandProto_Type_CalcCommandProto_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CalcCommandProto_Type_CalcCommandProto_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CalcCommandProto_Type_IsValid(int value);
const CalcCommandProto_Type CalcCommandProto_Type_Type_MIN = CalcCommandProto_Type_ADD;
const CalcCommandProto_Type CalcCommandProto_Type_Type_MAX = CalcCommandProto_Type_MUL;
const int CalcCommandProto_Type_Type_ARRAYSIZE = CalcCommandProto_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CalcCommandProto_Type_descriptor();
inline const ::std::string& CalcCommandProto_Type_Name(CalcCommandProto_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CalcCommandProto_Type_descriptor(), value);
}
inline bool CalcCommandProto_Type_Parse(
    const ::std::string& name, CalcCommandProto_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CalcCommandProto_Type>(
    CalcCommandProto_Type_descriptor(), name, value);
}
// ===================================================================

class CalcCommandProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.CalcCommandProto) */ {
 public:
  CalcCommandProto();
  virtual ~CalcCommandProto();

  CalcCommandProto(const CalcCommandProto& from);

  inline CalcCommandProto& operator=(const CalcCommandProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalcCommandProto(CalcCommandProto&& from) noexcept
    : CalcCommandProto() {
    *this = ::std::move(from);
  }

  inline CalcCommandProto& operator=(CalcCommandProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CalcCommandProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalcCommandProto* internal_default_instance() {
    return reinterpret_cast<const CalcCommandProto*>(
               &_CalcCommandProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CalcCommandProto* other);
  friend void swap(CalcCommandProto& a, CalcCommandProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalcCommandProto* New() const final {
    return CreateMaybeMessage<CalcCommandProto>(NULL);
  }

  CalcCommandProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalcCommandProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalcCommandProto& from);
  void MergeFrom(const CalcCommandProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalcCommandProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CalcCommandProto_Type Type;
  static const Type ADD =
    CalcCommandProto_Type_ADD;
  static const Type SUB =
    CalcCommandProto_Type_SUB;
  static const Type MUL =
    CalcCommandProto_Type_MUL;
  static inline bool Type_IsValid(int value) {
    return CalcCommandProto_Type_IsValid(value);
  }
  static const Type Type_MIN =
    CalcCommandProto_Type_Type_MIN;
  static const Type Type_MAX =
    CalcCommandProto_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    CalcCommandProto_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return CalcCommandProto_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return CalcCommandProto_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return CalcCommandProto_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 var_more = 5;
  int var_more_size() const;
  void clear_var_more();
  static const int kVarMoreFieldNumber = 5;
  ::google::protobuf::int32 var_more(int index) const;
  void set_var_more(int index, ::google::protobuf::int32 value);
  void add_var_more(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      var_more() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_var_more();

  // string command_name = 1;
  void clear_command_name();
  static const int kCommandNameFieldNumber = 1;
  const ::std::string& command_name() const;
  void set_command_name(const ::std::string& value);
  #if LANG_CXX11
  void set_command_name(::std::string&& value);
  #endif
  void set_command_name(const char* value);
  void set_command_name(const char* value, size_t size);
  ::std::string* mutable_command_name();
  ::std::string* release_command_name();
  void set_allocated_command_name(::std::string* command_name);

  // .test.CalcCommandProto.Type op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::test::CalcCommandProto_Type op_type() const;
  void set_op_type(::test::CalcCommandProto_Type value);

  // int32 var1 = 3;
  void clear_var1();
  static const int kVar1FieldNumber = 3;
  ::google::protobuf::int32 var1() const;
  void set_var1(::google::protobuf::int32 value);

  // int32 var2 = 4;
  void clear_var2();
  static const int kVar2FieldNumber = 4;
  ::google::protobuf::int32 var2() const;
  void set_var2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.CalcCommandProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > var_more_;
  mutable int _var_more_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr command_name_;
  int op_type_;
  ::google::protobuf::int32 var1_;
  ::google::protobuf::int32 var2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_2fCalcProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CalcResultProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.CalcResultProto) */ {
 public:
  CalcResultProto();
  virtual ~CalcResultProto();

  CalcResultProto(const CalcResultProto& from);

  inline CalcResultProto& operator=(const CalcResultProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CalcResultProto(CalcResultProto&& from) noexcept
    : CalcResultProto() {
    *this = ::std::move(from);
  }

  inline CalcResultProto& operator=(CalcResultProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CalcResultProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CalcResultProto* internal_default_instance() {
    return reinterpret_cast<const CalcResultProto*>(
               &_CalcResultProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CalcResultProto* other);
  friend void swap(CalcResultProto& a, CalcResultProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CalcResultProto* New() const final {
    return CreateMaybeMessage<CalcResultProto>(NULL);
  }

  CalcResultProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CalcResultProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CalcResultProto& from);
  void MergeFrom(const CalcResultProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalcResultProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.CalcResultProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_test_2fCalcProto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CalcCommandProto

// string command_name = 1;
inline void CalcCommandProto::clear_command_name() {
  command_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CalcCommandProto::command_name() const {
  // @@protoc_insertion_point(field_get:test.CalcCommandProto.command_name)
  return command_name_.GetNoArena();
}
inline void CalcCommandProto::set_command_name(const ::std::string& value) {
  
  command_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.CalcCommandProto.command_name)
}
#if LANG_CXX11
inline void CalcCommandProto::set_command_name(::std::string&& value) {
  
  command_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.CalcCommandProto.command_name)
}
#endif
inline void CalcCommandProto::set_command_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.CalcCommandProto.command_name)
}
inline void CalcCommandProto::set_command_name(const char* value, size_t size) {
  
  command_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.CalcCommandProto.command_name)
}
inline ::std::string* CalcCommandProto::mutable_command_name() {
  
  // @@protoc_insertion_point(field_mutable:test.CalcCommandProto.command_name)
  return command_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CalcCommandProto::release_command_name() {
  // @@protoc_insertion_point(field_release:test.CalcCommandProto.command_name)
  
  return command_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CalcCommandProto::set_allocated_command_name(::std::string* command_name) {
  if (command_name != NULL) {
    
  } else {
    
  }
  command_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_name);
  // @@protoc_insertion_point(field_set_allocated:test.CalcCommandProto.command_name)
}

// .test.CalcCommandProto.Type op_type = 2;
inline void CalcCommandProto::clear_op_type() {
  op_type_ = 0;
}
inline ::test::CalcCommandProto_Type CalcCommandProto::op_type() const {
  // @@protoc_insertion_point(field_get:test.CalcCommandProto.op_type)
  return static_cast< ::test::CalcCommandProto_Type >(op_type_);
}
inline void CalcCommandProto::set_op_type(::test::CalcCommandProto_Type value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:test.CalcCommandProto.op_type)
}

// int32 var1 = 3;
inline void CalcCommandProto::clear_var1() {
  var1_ = 0;
}
inline ::google::protobuf::int32 CalcCommandProto::var1() const {
  // @@protoc_insertion_point(field_get:test.CalcCommandProto.var1)
  return var1_;
}
inline void CalcCommandProto::set_var1(::google::protobuf::int32 value) {
  
  var1_ = value;
  // @@protoc_insertion_point(field_set:test.CalcCommandProto.var1)
}

// int32 var2 = 4;
inline void CalcCommandProto::clear_var2() {
  var2_ = 0;
}
inline ::google::protobuf::int32 CalcCommandProto::var2() const {
  // @@protoc_insertion_point(field_get:test.CalcCommandProto.var2)
  return var2_;
}
inline void CalcCommandProto::set_var2(::google::protobuf::int32 value) {
  
  var2_ = value;
  // @@protoc_insertion_point(field_set:test.CalcCommandProto.var2)
}

// repeated int32 var_more = 5;
inline int CalcCommandProto::var_more_size() const {
  return var_more_.size();
}
inline void CalcCommandProto::clear_var_more() {
  var_more_.Clear();
}
inline ::google::protobuf::int32 CalcCommandProto::var_more(int index) const {
  // @@protoc_insertion_point(field_get:test.CalcCommandProto.var_more)
  return var_more_.Get(index);
}
inline void CalcCommandProto::set_var_more(int index, ::google::protobuf::int32 value) {
  var_more_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.CalcCommandProto.var_more)
}
inline void CalcCommandProto::add_var_more(::google::protobuf::int32 value) {
  var_more_.Add(value);
  // @@protoc_insertion_point(field_add:test.CalcCommandProto.var_more)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CalcCommandProto::var_more() const {
  // @@protoc_insertion_point(field_list:test.CalcCommandProto.var_more)
  return var_more_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CalcCommandProto::mutable_var_more() {
  // @@protoc_insertion_point(field_mutable_list:test.CalcCommandProto.var_more)
  return &var_more_;
}

// -------------------------------------------------------------------

// CalcResultProto

// int32 result = 1;
inline void CalcResultProto::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 CalcResultProto::result() const {
  // @@protoc_insertion_point(field_get:test.CalcResultProto.result)
  return result_;
}
inline void CalcResultProto::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:test.CalcResultProto.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::test::CalcCommandProto_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::test::CalcCommandProto_Type>() {
  return ::test::CalcCommandProto_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_test_2fCalcProto_2eproto
