/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: person.proto */

#ifndef PROTOBUF_C_person_2eproto__INCLUDED
#define PROTOBUF_C_person_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Company Company;
typedef struct _Person Person;


/* --- enums --- */

typedef enum _Gender {
  GENDER__MALE = 0,
  GENDER__FAMALE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GENDER)
} Gender;

/* --- messages --- */

struct  _Company
{
  ProtobufCMessage base;
  char *name;
  char *address;
  uint32_t salary;
};
#define COMPANY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&company__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


typedef enum {
  PERSON__CONTACT__NOT_SET = 0,
  PERSON__CONTACT_ADDRESS = 6,
  PERSON__CONTACT_PHONE = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PERSON__CONTACT)
} Person__ContactCase;

struct  _Person
{
  ProtobufCMessage base;
  char *name;
  int32_t id;
  char *email;
  size_t n_scores;
  int32_t *scores;
  Gender gender;
  size_t n_companys;
  Company **companys;
  Person__ContactCase contact_case;
  union {
    char *address;
    int32_t phone;
  };
};
#define PERSON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&person__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0,NULL, GENDER__MALE, 0,NULL, PERSON__CONTACT__NOT_SET, {0} }


/* Company methods */
void   company__init
                     (Company         *message);
size_t company__get_packed_size
                     (const Company   *message);
size_t company__pack
                     (const Company   *message,
                      uint8_t             *out);
size_t company__pack_to_buffer
                     (const Company   *message,
                      ProtobufCBuffer     *buffer);
Company *
       company__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   company__free_unpacked
                     (Company *message,
                      ProtobufCAllocator *allocator);
/* Person methods */
void   person__init
                     (Person         *message);
size_t person__get_packed_size
                     (const Person   *message);
size_t person__pack
                     (const Person   *message,
                      uint8_t             *out);
size_t person__pack_to_buffer
                     (const Person   *message,
                      ProtobufCBuffer     *buffer);
Person *
       person__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   person__free_unpacked
                     (Person *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Company_Closure)
                 (const Company *message,
                  void *closure_data);
typedef void (*Person_Closure)
                 (const Person *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    gender__descriptor;
extern const ProtobufCMessageDescriptor company__descriptor;
extern const ProtobufCMessageDescriptor person__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_person_2eproto__INCLUDED */
